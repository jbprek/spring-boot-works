CREATE TABLE DEPARTMENTS
(
    ID   INT PRIMARY KEY,
    NAME VARCHAR(20) NOT NULL
)^;

CREATE TABLE EMPLOYEES
(
    ID            VARCHAR(20) PRIMARY KEY,
    HIRE_DATE     DATE        NOT NULL,
    FIRST_NAME    VARCHAR(50) NOT NULL,
    LAST_NAME     VARCHAR(50) NOT NULL,
    DEPARTMENT_ID INT,
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS (ID) ON DELETE CASCADE ON UPDATE CASCADE
)^;

CREATE PROCEDURE SPROC_FIND_DEPT(IN IN_DEPT_ID INT, OUT OUT_ID INT, OUT OUT_NAME VARCHAR(20))
    READS SQL DATA
BEGIN ATOMIC
SELECT D.ID, D.NAME INTO OUT_ID, OUT_NAME FROM DEPARTMENTS D WHERE D.ID = IN_DEPT_ID;
END^;

CREATE PROCEDURE SPROC_UPDATE_DEPT_NAME(IN IN_DEPT_ID INT, IN NEW_NAME VARCHAR(20))
    MODIFIES SQL DATA
UPDATE DEPARTMENTS SET NAME=NEW_NAME WHERE ID=IN_DEPT_ID^;

CREATE PROCEDURE SPROC_DEPT_EMP_REP1(IN IN_DEPT_ID INT)
    READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN ATOMIC
DECLARE OUT_CURSOR CURSOR WITH RETURN FOR
    SELECT E.ID, E.HIRE_DATE, E.LAST_NAME, E.FIRST_NAME
    FROM DEPARTMENTS D INNER JOIN EMPLOYEES E
                                  ON D.ID = E.DEPARTMENT_ID
    WHERE D.ID = IN_DEPT_ID;
OPEN OUT_CURSOR;
END^;

